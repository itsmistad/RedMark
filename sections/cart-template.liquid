{% for item in cart.items %}
{% for tags_r in item.product.tags %}
{% if tags_r contains 'upsell_' %}
{% assign test = tags_r | remove: 'upsell_' %}
{% assign test_1  = all_products[test] %}  
{% endif %}
{% endfor %}
{% endfor %}

<div class="page-width" data-section-id="{{ section.id }}" data-section-type="cart-template">
<div class="doubly-message"></div>
  {% if cart.item_count > 0 %}
  <div class="section-header text-center">
    <div class="head_part_1">
      <h1>{{ 'cart.general.title' | t }}</h1>
    </div>

    <div class="head_part_2">

      {% if section.settings.related_product_1 %}

      {% if test_1 !=blank %}

      <div class="custom">
        <button type="button" class="custom_btn btn btn-info btn-lg jtone btn--small-wide" data-toggle="modal" data-target="#myModal">{{ section.settings.checkout_first }}</button>
      </div>
      <form action="/cart" method="post" novalidate="" class="cart">
        <input type="submit" name="checkout" class="btn btn--small-wide second_button" value="{{ section.settings.checkout_first }}"> 
      </form>

      {% else %}
      <form action="/cart" method="post" novalidate="" class="cart">
        <input type="submit" name="checkout" class="btn btn--small-wide first" value="{{ section.settings.checkout_first }}"> 
      </form>
      {% endif %}


      {% else %}
      <form action="/cart" method="post" novalidate="" class="cart">
        <input type="submit" name="checkout" class="btn btn--small-wide second" value="{{ section.settings.checkout_first }}"> 
      </form>
      {% endif %}
    </div>
  </div>
  <form action="/cart" method="post" novalidate class="cart">
    <table>
      <thead class="cart__row cart__header">
        <th colspan="2">{{ 'cart.label.product' | t }}</th>
        <th>{{ 'cart.label.price' | t }}</th>
        <th class="text-center">{{ 'cart.label.quantity' | t }}</th>
        <th class="text-right">{{ 'cart.label.total' | t }}</th>
      </thead>
      <tbody>
        {% for item in cart.items %}
        <tr class="cart__row border-bottom line{{ forloop.index }} cart-flex{% if forloop.first %} border-top{% endif %}">
          <td class="cart__image-wrapper cart-flex-item">
            <a href="{{ item.url | within: collections.all }}">
              <img class="cart__image" src="{{ item | img_url: '100x' }}" alt="{{ item.title | escape }}">
            </a>
          </td>
          <td class="cart__meta small--text-left cart-flex-item">
            <div class="list-view-item__title">
              <a href="{{ item.url }}">
                {{ item.product.title }}
<span class="saso-cart-item-discount-notes" data-key="{{item.key}}"></span>
<span class="saso-cart-item-upsell-notes" data-key="{{item.key}}"></span>                                
                                
                {% if item.quantity > 1 %}
                <span class="medium-up--hide"><span class="visually-hidden">{{ 'cart.label.quantity' | t }}</span>(x{{ item.quantity }})</span>
                {% endif %}
              </a>
            </div>
            {% unless item.variant.title contains 'Default' %}
            <div class="cart__meta-text">
              {% for option in item.product.options %}
              {{ option }}: {{ item.variant.options[forloop.index0] }} <br>
              {% endfor %}
            </div>
            {% endunless %}

            {% comment %}
            Optional, loop through custom product line items if available

            Line item properties come in as having two parts. The first part will be passed with the default form,
            but p.last is the actual custom property and may be blank. If it is, don't show it.

            For more info on line item properties, visit:
            - http://docs.shopify.com/support/your-store/products/how-do-I-collect-additional-information-on-the-product-page-Like-for-a-monogram-engraving-or-customization
            {% endcomment %}
            {%- assign property_size = item.properties | size -%}
            {% if property_size > 0 %}
            <div class="cart__meta-text">
              {% for p in item.properties %}
              {% unless p.last == blank %}
              {{ p.first }}:

              {% comment %}
              Check if there was an uploaded file associated
              {% endcomment %}
              {% if p.last contains '/uploads/' %}
              <a href="{{ p.last }}">{{ p.last | split: '/' | last }}</a> <br />
              {% else %}
              {{ p.last }}<br />
              {% endif %}
              {% endunless %}
              {% endfor %}
            </div>
            {% endif %}

            <p class="small--hide cart_remove">
              <a href="/cart/change?line={{ forloop.index }}&amp;quantity=0" class="btn btn--small btn--secondary cart__remove">{{ 'cart.general.remove' | t }}</a>
            </p>
          </td>
          <td class="cart__price-wrapper cart-flex-item">
            {% comment %} {{ item.variant.compare_at_price | money }} {% endcomment %}
            
<span class="saso-cart-item-price" data-key="{{item.key}}">{{ item.price | money }}</span>


            {% for discount in item.discounts %}
            <div class="cart-item__discount medium-up--hide">{{ discount.title }}</div>
            {% endfor %}
            <div class="cart__edit medium-up--hide">
              <button type="button" class="btn btn--secondary btn--small js-edit-toggle cart__edit--active" data-target="line{{ forloop.index }}">
                <span class="cart__edit-text--edit">{{ 'cart.general.edit' | t }}</span>
                <span class="cart__edit-text--cancel">{{ 'cart.general.cancel' | t }}</span>
              </button>
            </div>
          </td>
          <td class="cart__update-wrapper cart-flex-item text-right">
            <a href="/cart/change?line={{ forloop.index }}&amp;quantity=0" class="btn btn--small btn--secondary cart__remove medium-up--hide">{{ 'cart.general.remove' | t }}</a>
            <div class="cart__qty">
              <label for="updates_{{ item.key }}" class="cart__qty-label">{{ 'cart.label.quantity' | t }}</label>
              <input class="cart__qty-input" type="number" name="updates[]" id="updates_{{ item.key }}" value="{{ item.quantity }}" min="0" pattern="[0-9]*">
            </div>
            <input type="submit" name="update" class="btn btn--small cart__update medium-up--hide" value="{{ 'cart.general.update' | t }}">
          </td>
          <td class="text-right small--hide">
            {% if item.original_line_price != item.line_price %}
            <div class="cart-item__original-price"><s>{{ item.original_line_price | money }}</s></div>
            {% endif %}

            <div>
              
<span class="saso-cart-item-line-price" data-key="{{item.key}}">{{ item.line_price | money }}</span>

              </div>

            {% for discount in item.discounts %}
            <div class="cart-item__discount">{{ discount.title }}</div>
            {% endfor %}
          </td>
        </tr>
        {% endfor %}
      </tbody>
    </table>
    <footer class="cart__footer">
      <div class="grid">
        <div class="grid__item medium-up--one-half cart-note">
          {% if section.settings.cart_notes_enable %}
          <label for="CartSpecialInstructions" class="cart-note__label small--text-center">{{ 'cart.general.note' | t }}</label>
          <textarea name="note" id="CartSpecialInstructions" class="cart-note__input">{{ cart.note }}</textarea>
          {% endif %}




          {% if section.settings.cart_page_discount %}

          {%- assign car_total = cart.total_price | money_without_currency_format | money_without_currency | remove: '.00' | remove: ',' -%}
          {%- assign cart_order = section.settings.cart_order_above_box -%}

          {% assign diff = car_total | minus: cart_order %}
          {% if diff > 0 %}
          <p>We noticed your order amount is more than {{ section.settings.cart_order_above_box }}USD, so we are offering you {{ section.settings.cart_disount_box }}% discount</p>

          <div class="discount">
            <h3>Discount Code</h3>
            <input type="text" name="discount" value="{{section.settings.discount_code}}"/>
            <p>Discount codes will be applied at check out.</p>
          </div>
          {% endif %}
          {% endif %}


        </div>

        <div class="grid__item text-right small--text-center{% if section.settings.cart_notes_enable %} medium-up--one-half{% endif %}">
          {% if section.settings.Regular %}
          <div class="cart_total">

            {% assign total_saving = 0 %}
            {% for item in cart.items %}
        {% capture rg__price %}{{ item.variant.compare_at_price  }}{% endcapture %}
              {% capture tot_qty1 %} {{ item.quantity }} {% endcapture %}
           {% assign rg__total_pr = rg__price | times: tot_qty1 %}
             {% assign rg__total_last = rg__total_pr | plus: rg__total_last %}
           {% if item.variant.compare_at_price > item.variant.price %}
            {% capture saving %}{{ item.variant.compare_at_price | minus: item.variant.price }}{% endcapture %}
            {% assign total_saving = saving | plus: total_saving %}
            {% capture tot_qty %} {{ item.quantity }} {% endcapture %}
            {% endif %}
            {% endfor %}
            <span class="cart__regular_total-title 1212"><b>Regular Price:{% capture about_me %}{{ rg__total_last }}{% endcapture %}</b></span>
            {% capture about_u %}{{ cart.total_price | minus: cato }}{% endcapture %}
            {% assign about_u = about_u | split: '.'%}
            {% assign about_u = about_u[0] %}
            
            {% if about_u  == about_me %}
             <div class="mny 1">  {{ about_me | money}} </div>
            {% elsif about_u < about_me %}
             <div class="mny cut_cus 2" style="text-decoration: line-through">  {{ about_me | money}} </div>
            {% elsif about_u > about_me %}
             <div class="mny cut_cus 3" style="text-decoration: line-through">  {{ about_me | money}} </div>
            {% endif %}
            
            
            <br/>
          </div>
          {% endif %}
          
                   <div class="cart_total">


            <span class="cart__subtotal-title">{{ 'cart.general.subtotal' | t }}</span>

            {% if section.settings.cart_page_discount %}

            {%- assign car_total = cart.total_price | money_without_currency_format | money_without_currency | remove: '.00' | remove: ',' -%}
            {%- assign cart_order = section.settings.cart_order_above_box -%}

            {% assign diff = car_total | minus: cart_order %}

            {% if diff > 0 %}

            {% comment %}
            <p>{{ cart_order }}</p>
            <p>{{ car_total }}</p>
            <span>diff: {{ car_total | times: section.settings.cart_disount_box | divided_by: 100 | append: '.00' }}</span>
            {% endcomment %}
            {% assign cto = car_total | times: section.settings.cart_disount_box | divided_by: 100  %}
            {% comment %}<span>{{ cto | times: 100 }}</span> {% endcomment %}
            {% assign cato = cto | times: 100 %}
            
            <span class="cart__subtotal 1">{% capture about_u %}{{ cart.total_price | minus: cato }}{% endcapture %}
            {% assign about_u = about_u | split: '.'%}
            {% assign about_u = about_u[0] %}
            </span>  
            {{ about_u | money }}
            {% else %}
            <span class="cart__subtotal 2">{% capture about_u %}{{ cart.total_price | minus: cato }}{% endcapture %}
            {% assign about_u = about_u | split: '.'%}
            {% assign about_u = about_u[0] %}
            </span>
            {{ about_u | money }}
            {% endif %}

            {% else %}
            <span class="cart__subtotal 3">{% capture about_u %}{{ cart.total_price | minus: cato }}{% endcapture %}
            {% assign about_u = about_u | split: '.'%}
            {% assign about_u = about_u[0] %}
            </span>  
                     <div class="mny"> {{ about_u | money }} </div>
            {% endif %}
        
          </div>
 
          {% if cart.total_discounts > 0 %}
          <div class="cart__savings">
            {{ 'cart.general.savings' | t }}
            <span class="cart__savings-amount">{{ cart.total_discounts | money }}</span>
          </div>
          {% endif %}

   {% if section.settings.saving %}
          <span class="total_savings"> <span class="sav_total">Total Saving : </span> <div class="mny"> {{ about_me | minus: about_u | abs | money }} {% comment %}{{ rg__total_last | minus: cart.total_price | minus: cato | abs | money }}{% endcomment %}</div></span>
            
          
{% endif %}

          <div class="cart_footer_1">
            <div class="head_part_1 check_2">
              {% if section.settings.related_product_1 %}

              {% if test_1 !=blank %}

              <div class="custom">
                <button type="button" class="custom_btn btn btn-info btn-lg jtone btn--small-wide" data-toggle="modal" data-target="#myModal">{{ section.settings.checkout_second }}</button>
              </div>
              
              <form action="/cart" method="post" novalidate="" class="cart">
                <input type="submit" name="checkout" class="btn btn--small-wide second_button" value="{{ section.settings.checkout_second }}"> 
              </form>
              <!-- COOKIE FOR UPDATE BUTTOPM  -->

              {% else %}
              <input type="submit" name="checkout" class="btn btn--small-wide " value="{{ section.settings.checkout_second }}"> 
              {% endif %}


              {% else %}
              <input type="submit" name="checkout" class="btn btn--small-wide" value="{{ section.settings.checkout_second }}"> 

              {% endif %}
            </div>


           
          </div>    

          
          <div class="update_button">
              <input type="submit" name="update" class="btn btn--secondary cart__update cart__update--large small--hide" value="{{ 'cart.general.update' | t }}">
          </div>
                     {% if section.settings.checkout_text %}<div class="cart__shipping">{{ section.settings.shipping }}</div>{% endif %}

          {% if section.settings.enable_countdown_1 %}
          <div class="visitor_counter">
            
             <div class="count1" id="countdown"></div>
            <div class="count1" id="timer"></div>
            <div class="container_text_cart"> 
              <span class="text_cart"> {{ section.settings.text_count_timer }} </span> 
            </div>  
          </div>
          {% endif %}


          {% if section.settings.paypal_enable %}
          {% if additional_checkout_buttons %}
          <div class="additional-checkout-buttons">{{ content_for_additional_checkout_buttons }}</div>
          {% endif %}
          {% endif %}
          <p class="left_01">
            {{ shop.name }} process all orders in {{ shop.currency }}.
            While the content of your cart is currently displayed in
            <span class="selected-currency"></span>,
            you will check out using {{ shop.currency }} at the most current exchange rate.
          </p>

        </div>
      </div>
    </footer>
  </form>
  {% else %}
  <div class="empty-page-content text-center">
    <h1>{{ 'cart.general.title' | t }}</h1>
    <p>{{ 'cart.general.empty' | t }}</p>
    <a href="/" class="btn btn--has-icon-after">{{ 'general.404.link' | t }}{% include 'icon-arrow-right' %}</a>
  </div>
  {% endif %}
</div>

<div id="openModal" class="modalDialog">
  <div class="popup">	
    <h2>Related Products</h2>
  </div>
</div>
<!-- <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"> -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

<div class="container" id="myModal1">
  <!-- Modal -->
  <div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog" data-expires="{{ settings.session_time }}" data-delay="1">
      <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <a href="/checkout"> X </a>
          <h4 class="modal-title">Related Products
          </h4>
        </div>
        <div class="modal-body">
			    {% assign handle_string = "" %}
          {% for item in cart.items %}
          {% for tags_r in item.product.tags %}
          {% if tags_r contains 'upsell_' %}
          
          {% assign test = tags_r | remove: 'upsell_' %}         
          {% if handle_string contains test %}
          {% continue %}
          {% else %}
          {% capture handle_string %}{{test}},{%endcapture%}
          
          {% assign product_drop  = all_products[test] %} 
          
          <div class="upsell_products">
            <div class="popup_image">     {{ upsell_second }} <img class="cart__image" src="{{ product_drop.featured_image.src | img_url: '200x200' }}" > </div>
            <div class="popup_title"> {{ product_drop.title }} </div>
            <div class="popup_price">  {{ product_drop.price | money }} </div>
            <form action="/cart/add" method="post" enctype="multipart/form-data" class="product-form product-form">
              {% unless product_drop.options.size == 1 and product_drop.variants[0].title == 'Default Title' %}
              {% for option in product_drop.options_with_values %}
              <div class="selector-wrapper js product-form__item">
                <label {% if option.name == 'default' %}class="label--hidden" {% endif %}for="SingleOptionSelector-{{ forloop.index0 }}">
                  {{ option.name }}
                </label>
                <select class="single-option-selector single-option-selector-{{ section.id }} product-form__input" id="SingleOptionSelector-{{ forloop.index0 }}" data-index="option{{ forloop.index }}">
                  {% for value in option.values %}
                  <option value="{{ value | escape }}"{% if option.selected_value == value %} selected="selected"{% endif %}>{{ value }}</option>
                  {% endfor %}
                </select>
              </div>

              {% endfor %}
              {% endunless %}

              <select name="id" id="ProductSelect" class="product-form__variants no-js">
                {% for variant in product_drop.variants %}
                {% if variant.available %}
                <option {% if variant == product_drop.selected_or_first_available_variant %} selected="selected" {% endif %} value="{{ variant.id }}">
                  {{ variant.title }}
                </option>
                {% else %}
                <option disabled="disabled">{{ variant.title }} - {{ 'products.product.sold_out' | t }}</option>
                {% endif %}
                {% endfor %}
              </select>

            
              <div class="product-form__item product-form__item--quantity">
                <input type="number" id="Quantity" name="quantity" value="1" min="1" class="product-form__input" pattern="[0-9]*">
              </div>
             

              <div class="product-form__item product-form__item--submit custom_buton">
                <button type="submit" name="add" id="AddToCart" class="test btn product-form__cart-submit{% if product_drop.options.size == 1 and product_drop.variants[0].title == 'Default Title' %} product-form__cart-submit--small{% endif %}">
                  <span id="AddToCartText">
                   
                  </span>
                   add to cart
                </button>
                
              </div>
            </form>
          </div>

          {% endif %}
          {% endif %}
          {% endfor %}
          {% endfor %}
        </div>
        <div class="modal-footer">
              <a href="/checkout"  > No, Thanks </a>
        </div>
      </div>

    </div>
  </div>

</div>
<style>
 button#paypal-express-button {
    display: none;
  }
   {% if section.settings.paypal_enable %}
  button#paypal-express-button {
    display: block;   
}
   {% endif %}
   .cut_cus .money {
    text-decoration: line-through;
}
  
    span.sav_total {
    padding-right: 9.6px;
    font-weight: bold;
}
  span.cart__subtotal-title {
    font-weight: bold;
}
  
.template-cart p.ajaxified-cart-feedback.success {  
    position: absolute;
}
  
  button#AddToCart:hover span {
    color: #fff;
}
  
  .popup_title {
    text-align: left;
}
  
  .modal-footer {
    text-align: center;
}
  
  .cart__subtotal {
    padding-left: 10px;
    min-width: 29px;
    display: inline-block;
  }

  .right_aligned {
    text-align: right;
  }

  .head_part_1.check_2 {
    width: 100%;
  }

  {% if section.settings.check_out_1_2 %}
  .head_part_1.check_2 {
    display: block !important;
  }
  {% endif %}


  .head_part_1.check_2 {
    display: none ;
  }


  .head_part_2.check_2 {
    width: 100%;
  }



  .head_part_2.check_2 {
    float: right !important;
    padding-top: 0px;
  }

  .security-badge {
    width: 100%;
    float: left;

  }
  .text_cart {

    color: #000;
    font-weight: bold;
  }


  {% if section.settings.check_out_1 %}
  .head_part_2 {
    display: block !important;
  }

  .head_part_1 {
    width: 50% ;
    float: left ;
    text-align: right ;
  }


  .head_part_2 {
    width: 50% ;
    float: left ;
    padding-top: 22px ;
    text-align: right ;
  }

  
  @media screen and (min-width : 320px) and (max-width : 767px)  {
     td.cart__price-wrapper.cart-flex-item span {
      font-size: 12px;
    }
    .mny span.money {
    width: 120px;
}
    span.cart__regular_total-title {
    font-size: 18px;
}
    span.cart__subtotal-title {
    font-size: 19px;
    font-weight: bold;
    margin-right: 7px;
}
    span.sav_total {
    padding-right: 18px;
    font-weight: bold;
    font-size: 18px;
}

    label.cart-note__label.small--text-center {
    font-size: 15px;
}
    .cart__shipping {
    font-size: 16px !important;
    text-align: center;
}
    
    .discount {
      text-align: center;
      padding-bottom: 20px;
    }

    .cart_total {
      padding-bottom: 16px;
      font-size: 20px;
    }

    .cart__shipping {
      font-style: italic;
      font-size: 0.875em;
      padding: 18px 0 17px;
    }
    .security-badge {
      width: 100%;
      text-align: center;
    }

    .head_part_2 {
      width: 100%;
      float: left;
      padding-top: 22px;
      text-align: center;
    }
    .head_part_1 {
      width: 100%;
      float: left;
      text-align: center; 
    }
    .head_part_2 {
      padding-bottom: 10px;
    }
  }

  {% endif %}


  .head_part_2 {
    display: none;
  } 


  .head_part_2 .custom  {
    background-color:  {{ section.settings.header_checkout_color }} !important;

  }
  .head_part_2 .custom button.btn.btn--small-wide {
    font-size: {{ section.settings.header_checkout_fontsize }} !important;
  }
  .check_2 .custom  {
    background-color:  {{ section.settings.header_checkout_color }} !important;

  }
  .check_2 .custom button.btn.btn--small-wide {
    font-size: {{ section.settings.header_checkout_fontsize }} !important;
  }



  .head_part_2 input.btn{
    background-color:  {{ section.settings.header_checkout_color }} !important;
    font-size: {{ section.settings.header_checkout_fontsize }} !important;
  } 

  .head_part_1.check_2 input.btn{
    background-color:  {{ section.settings.header_checkout_color }} !important;
    font-size: {{ section.settings.header_checkout_fontsize }} !important;

  }

  .upsell_products {
    padding-top: 20px !important;
  }

  .test.btn.product-form__cart-submit {
    max-width: 200px;
  }

  @media screen and (max-width : 2000px) and (min-width : 1024px){
    .modal-header {
      border-bottom: 0px;
    }
    .modal-footer {
      border-top: 0px;
    }
    .upsell_products {
      padding-top: 26px !important;
    }

  }

  .count1 {
    color: {{ section.settings.timer_color }};
    font-family: Verdana, Arial, sans-serif;
    font-size: 18px;
    width: 5%; 
    font-weight: bold;
    float: right;
    text-decoration: none;
  }
  
  
  {% if section.settings.cart_notes_enable %}
  .count1 {
  width: 9% !important; 
  }
  {% endif %}
  span.text_cart {
    float: right;
  }
  #countdown{
    display:none;
  }

  span.text_cart {
    line-height: 25px;
  }

  .upsell_products .selector-wrapper {
    display: none;
  }


  @media screen and (min-width : 320px) and (max-width : 767px)  {  
    div#myModal {
      padding-right: 0px !important;
      padding-left: 0px !important;
    }
    .popup_title {
      text-align: center;
    }
    button#AddToCart {
      text-transform: capitalize;
      background-color: #08BD66;
    }
    .template-cart .main-content{
      padding-top:0px;
    }
    .grid__item.medium-up--three-fifths.small--one-half h3 {
      font-size: 17px !important;
    }
    .upsell_products .product-form__item.product-form__item--quantity {
      display: none;
    }
    .popup_title {
      font-size: 12px;
    }
    span.money {
     font-size: 20px;
    }
    .visitor_counter {
      width: 85%;
    }
    .container_text_cart {
      padding-right: 30px;
    } 
    span.text_cart {
      line-height: 25px;
      font-size: 13px;
    }
    .template-cart .modal-header a {
      position: absolute;
      top: 10px;
      right: 10px;
    }
  }

  @media screen and (min-width : 768px) and (max-width : 1024px)  {
    span.text_cart {
      font-size: 11px;
    }
    .visitor_counter {
      float: left;
      width: 100%;
    }
    .count1 {
      width: 15%;
    }
    .cart__shipping {
      font-style: italic;
      font-size: 0.875em;
      padding: 18px 10px 20px;
    }
  }
.template-cart input.btn.btn--small-wide.second_button {
    color: #fff !important;
    border-radius: 0px;
}
  
input.btn.btn--small-wide.second_button {
    float: right;
}
.template-cart  input.btn.btn--small-wide {
    color: #fff !important ;
}
  @media screen and (max-width: 30000px) and (min-width: 1024px) {

.upsell_products {
    width: 100% !important;
    float: left !important;
}
.popup_image {
    float: left;
    padding-left: 15px;
    width: 14%;
}
  .upsell_products  .product-form__item.product-form__item--submit.custom_buton {
      text-align: right;
    }

.popup_title {
    float: left ;
    padding-left: 15px ;
}
.popup_price {
    width: 35%;
    float: left;
    text-align: left;
    padding-left: 17px;
}
.popup_title {
    font-size: 18px;
    font-weight: bold;
}
    button#AddToCart {
    text-transform: capitalize;
    background-color: #08BD66;
}
  
.upsell_products .product-form__cart-submit {
  width: initial;
} 
    .popup_title {
    min-width: 67%;
}
    
} 
  
</style>
      <!-- COOKIE FOR UPDATE BUTTOPM  -->
<script>
  
   $('.product-form__item.product-form__item--submit.custom_buton').on( "click", 'button#AddToCart', function(e){
                $('span#AddToCartText').trigger('click');
                
                });

 
  $(document).ready(function() {

  // If the 'hide cookie is not set we show the message
  if (!readCookie('hide_button')) {
        $("button.custom_btn").css("display", "block");
        $(".second_button").css("display", "none");
  }
    else {
      $("div.custom").css("display", "none");
        $(".second_button").css("display", "block");
       }

  // Add the event that closes the popup and sets the cookie that tells us to
  // not show it again until one day has passed.
  $('span#AddToCartText').click(function() {
    createCookie('hide_button', true, 1)
    return false;
  });

});

// ---
// And some generic cookie logic
// ---
function createCookie(name,value,days) {
  var ron = 10;
  if (days) {
    var date = new Date();
    date.setTime(date.getTime()+(days*ron*1*1000));
    var expires = "; expires="+date.toGMTString();
  }
  else var expires = "";
  document.cookie = name+"="+value+expires+"; path=/";
}

function readCookie(name) {
  var nameEQ = name + "=";
  var ca = document.cookie.split(';');
  for(var i=0;i < ca.length;i++) {
    var c = ca[i];
    while (c.charAt(0)==' ') c = c.substring(1,c.length);
    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
  }
  return null;
}

function eraseCookie(name) {
  createCookie(name,"",-1);
}
  </script>


<script>

  
  $( document ).ready(function() {
    function countdown( elementName, minutes, seconds )
    {
      var element, endTime, hours, mins, msLeft, time;

      function twoDigits( n )
      {
        return (n <= 9 ? "0" + n : n);
      }

      function updateTimer()
      {

        msLeft = endTime - (+new Date);
        if ( msLeft < 1000 ) {
         // element.innerHTML = "00:00";
        } else {
          time = new Date( msLeft );
          hours = time.getUTCHours();
          mins = time.getUTCMinutes();
          //element.innerHTML = (hours ? hours + ':' + twoDigits( mins ) : mins) + ':' + twoDigits( time.getUTCSeconds() );
          setTimeout( updateTimer, time.getUTCMilliseconds() + 500 );
        }
      }

      element = document.getElementById( elementName );
      endTime = (+new Date) + 1000 * (60*minutes + seconds) + 500;
      updateTimer();
    }

    countdown( "countdown", 1, 5 );
    countdown( "countdown2", {{ section.settings.countdown_time }}, 0 );
  });
</script>

<script>
   var firstTime = true;
  function countdown(minutes) {
    var seconds = 60;
    var mins = minutes;
   

     if(firstTime && getCookie("minutes")&&getCookie("seconds"))
    {
        firstTime = false;
        seconds = getCookie("seconds");
        mins = getCookie("minutes");
    }

    function tick() {

        var counter = document.getElementById("timer");
        setCookie("minutes", mins, 10)
        setCookie("seconds", seconds, 10)
        var current_minutes = mins - 1
        seconds--;
        counter.innerHTML =
            current_minutes.toString() + ":" + (seconds < 10 ? "0" : "") + String(seconds);
        //save the time in cookie



        if (seconds > 0) {
            setTimeout(tick, 1000);
        } else {

            if (mins > 1) {

                // countdown(mins-1);   never reach “00″ issue solved:Contributed by Victor Streithorst    -
                setTimeout(function() {
                    countdown(mins - 1);
                }, 1000);

            }
        }
    }
    tick();
}

function setCookie(cname, cvalue, exdays) {
    var d = new Date();
    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
    var expires = "expires=" + d.toGMTString();
    document.cookie = cname + "=" + cvalue + "; " + expires;
}

function getCookie(cname) {
    var name = cname + "=";
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') c = c.substring(1);
        if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
        }
    }
    return "";
}
countdown({{ section.settings.countdown_time }});
  </script>


{% schema %}
{
"name": "Cart page",
"settings": [
{
"type": "checkbox",
"id": "cart_notes_enable",
"label": "Enable cart notes",
"default": false
},
{
"type": "checkbox",
"id": "paypal_enable",
"label": "Enable paypal button",
"default": true
},

{
"type": "header",
"content": "Checkout button"
},
{
"type": "text",
"id": "checkout_first",
"label": "Checkout text first button"
},
{
"type": "header",
"content": "Checkout button"
},
{
"type": "text",
"id": "checkout_second",
"label": "Checkout text second button"
},
{
"type": "header",
"content": "Enable/Disable for Regular price and Total saving"
},
{
"type": "checkbox",
"id": "Regular",
"label": "Regular Price",
"default": false
},
{
"type": "checkbox",
"id": "saving",
"label": "Saving Price",
"default": false
},
{
"type": "header",
"content": "Product Discount"
},
{
"type": "checkbox",
"id": "cart_page_discount",
"label": "Enable",
"default": false
},

{
"type": "text",
"id": "cart_disount_box",
"label": "Discount (%)"
},
{
"type": "text",
"id": "cart_order_above_box",
"label": "Order above (USD)"
},
{
"type": "text",
"id": "discount_code",
"label": "Discount code"
},
{
"type": "header",
"content": "Enable checkout (header)"
},
{
"type": "checkbox",
"id": "check_out_1",
"label": "Enable",
"default": true
},
 
{
"type": "header",
"content": "Enable Shipping checkout (text)"
},
  {
"type": "text",
"id": "shipping",
"label": "Shipping text"
}, 
{
"type": "checkbox",
"id": "checkout_text",
"label": "Enable",
"default": true
},
  
{
"type": "header",
"content": "Enable checkout (footer)"
},
{
"type": "checkbox",
"id": "check_out_1_2",
"label": "Enable",
"default": true
},
{
"type": "color",
"id": "header_checkout_color",
"label": "Background color"
},

{
"type": "text",
"id": "header_checkout_fontsize",
"label": "Font size"
},
{
"type": "header",
"content": "Enable Upsell Products"
},
{
"type": "checkbox",
"id": "related_product_1",
"label": "Enable",
"default": true
},
{
"type": "header",
"content": "Enable Countdown"
},
{
"type": "checkbox",
"id": "enable_countdown_1",
"label": "Enable",
"default": true
},
{
"type": "text",
"id": "countdown_time",
"label": "Countdown Time",
"default": "10"
},
{
"type": "text",
"id": "text_count_timer",
"label": "Countdown Time",
"default": "Cart will expire in"
},
{
"type": "color",
"id": "timer_color",
"label": "Timer color",
"default": "#000"
}
]
}
{% endschema %}
